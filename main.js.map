{"version":3,"sources":["./src/app/elements/people/people.component.ts","./src/app/elements/people/people.component.html","./src/environments/environment.ts","./src/app/elements/people/people.service.ts","./src/app/elements/planets/planet/planet.component.ts","./src/app/elements/planets/planet/planet.component.html","./src/app/elements/people/character/character.component.ts","./src/app/elements/people/character/character.component.html","./src/app/elements/elements.component.ts","./src/app/elements/elements.component.html","./src/app/swapi.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/app-routing.module.ts","./src/app/main-container/main-container.component.ts","./src/app/main-container/main-container.component.html","./src/app/elements/planets/planets.component.ts","./src/app/elements/planets/planets.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/content.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd, UrlSegment, ParamMap } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport {\n  SwapiService,\n  People\n} from 'src/app/swapi.service';\nimport { PeopleService, } from './people.service';\nimport { API_PATH_BASE } from '../../swapi.service'\n@Component({\n  selector: 'app-people',\n  templateUrl: './people.component.html',\n  styleUrls: ['./people.component.css'],\n  providers: [{ provide: PeopleService }]\n})\nexport class PeopleComponent implements OnInit {\n  people: People = { results: [], next: '', previous: '', count: 0 };\n  navigationEnd: Observable<NavigationEnd>;\n  activatedChildId: string;\n  navigationEndSubscription: Subscription;\n  peopleSubscription: Subscription;\n  paramMapObservable!: Observable<ParamMap>;\n  paramMapSubscription: Subscription;\n  constructor(\n    private swapi: SwapiService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    /* private peopleService: PeopleService */) {\n    this.activatedChildId = '0';\n    this.navigationEnd = router.events.pipe(filter(event => event instanceof NavigationEnd)) as Observable<NavigationEnd>;\n    this.navigationEndSubscription = this.navigationEnd.subscribe(\n      event => {\n        console.log('People NavigationEnd: ', event);\n        if (this.activatedRoute.firstChild == null) {\n          this.swapi.setPeoplePage(API_PATH_BASE + 'people/?page=1');\n          this.activatedChildId = '0';\n        } else {\n          let urls: UrlSegment[] = this.activatedRoute.firstChild.snapshot.url;\n          let characterId: number = parseInt(urls[0].path);\n          characterId = characterId > 0 ? characterId : 1;\n          characterId = parseInt(`${(characterId - 1) / 10}`) + 1;\n          this.swapi.setPeoplePage(API_PATH_BASE + `people/?page=${characterId}`);\n          this.activatedChildId = urls[0].path;\n        }\n      }\n    )\n    this.peopleSubscription = this.swapi.people$.subscribe(people => this.people = people)\n    this.paramMapSubscription = this.activatedRoute.paramMap.subscribe(paramMap => {\n      console.log(`Param Map:${paramMap}`)\n    });\n  }\n\n\n\n  ngOnInit(): void { }\n  ngOnDestroy(): void {\n    this.navigationEndSubscription.unsubscribe();\n    this.peopleSubscription.unsubscribe();\n    this.paramMapSubscription.unsubscribe()\n  }\n  onPrevNextClick(page: string) {\n    this.swapi.setPeoplePage(page)\n  }\n  navigateTo(path: string) {\n    this.router.navigate([path], { relativeTo: this.activatedRoute });\n  }\n\n}\n","<!-- <p>people works!</p> -->\n<!-- <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n  <button [ngClass]=\"{'disabled': people.previous === null}\" type=\"button\" class=\"btn btn-primary\"\n    (click)=\"onPrevNextClick(people.previous)\">Previous</button>\n  <div class=\"btn btn-secondary disabled\">{{people.count}}</div>\n  <button [ngClass]=\"{'disabled': people.next === null}\" type=\"button\" class=\"btn btn-primary\"\n    (click)=\"onPrevNextClick(people.next)\">Next</button>\n</div> -->\n<div class=\"row\">\n  <!-- <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n    <button [ngClass]=\"{'disabled': people.previous === null}\" type=\"button\" class=\"btn btn-primary\"\n      (click)=\"onPrevNextClick(people.previous)\">Previous</button>\n    <div class=\"btn btn-secondary disabled\">{{people.count}}</div>\n    <button [ngClass]=\"{'disabled': people.next === null}\" type=\"button\" class=\"btn btn-primary\"\n      (click)=\"onPrevNextClick(people.next)\">Next</button>\n  </div> -->\n</div>\n<div class=\"row row-cols-md-2\">\n\n  <div class=\"col-md-4 col-lg-4 col-xl-3\">\n    <div class=\"btn-group w-100 py-2\" role=\"group\" aria-label=\"Basic example\">\n      <button [ngClass]=\"{'disabled': people.previous === null}\" type=\"button\" class=\"btn btn-primary\"\n        (click)=\"onPrevNextClick(people.previous)\">Previous</button>\n      <div class=\"btn btn-secondary disabled\">{{people.count}}</div>\n      <button [ngClass]=\"{'disabled': people.next === null}\" type=\"button\" class=\"btn btn-primary\"\n        (click)=\"onPrevNextClick(people.next)\">Next</button>\n    </div>\n    <nav>\n      \n      <ul class=\"list-group\">\n        <li class=\"list-group-item\" *ngFor=\"let character of people.results;let i=index\" [attr.data-index]=\"i\">\n          <span routerLink=\"{{character.url.split('/')[character.url.split('/').length-1]}}\" role=\"button\"\n            [ngClass]=\"{'link-primary': character.url.split('/')[character.url.split('/').length-1]!==activatedChildId}\"\n            routerLinkActive=\"link-success\"\n            (click)=\"navigateTo(character.url.split('/')[character.url.split('/').length-1])\">{{character.name}}</span>\n        </li>\n      </ul>\n    </nav>\n  </div>\n  <div class=\"col flex-md-grow-1\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n<!-- [ngClass]=\"{'link-primary': character.url.split('/')[character.url.split('/').length-2]!==activatedChildId}\" -->","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PeopleService {\n\n  constructor() { }\n  // Observable string sources\n  private currentCharacterIdSource = new Subject<string>();\n\n  // Observable string streams\n  currentCharacterId$ = this.currentCharacterIdSource.asObservable();\n\n  // Service message commands\n  setCurrentChild(id: string) {\n    this.currentCharacterIdSource.next(id);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-planet',\n  templateUrl: './planet.component.html',\n  styleUrls: ['./planet.component.css']\n})\nexport class PlanetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>planet works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter } from \"rxjs/operators\";\nimport { Character, SwapiService } from 'src/app/swapi.service';\nimport { PeopleService } from '../people.service';\n\n@Component({\n  selector: 'app-character',\n  templateUrl: './character.component.html',\n  styleUrls: ['./character.component.css'],\n  // providers: [PeopleService]\n\n})\nexport class CharacterComponent implements OnInit {\n  id_v: [string, any][] = [];\n  currentCharacter!: Character;\n  setCurrentCharacterSubscribtion: Subscription;\n  swapiCharactersSubscription: Subscription;\n  navigationEndSubscription: Subscription;\n  navigationEnd: Observable<NavigationEnd>;\n  constructor(\n    private peopleService: PeopleService,\n    private swapi: SwapiService,\n    private router: Router\n  ) {\n    /*     this.subscription = peopleService.currentCharacterId$.subscribe(\n          characterId => {\n            this.id_v = characterId;\n          }) */\n    this.setCurrentCharacterSubscribtion = peopleService.currentCharacterId$.subscribe(\n      id => this.swapi.setCurrentCharacter(id)\n    )\n\n    this.swapiCharactersSubscription = this.swapi.characters$.subscribe(\n      character => {\n        this.currentCharacter = character as Character;\n        // console.log(Object.entries(this.currentCharacter))\n        this.id_v = Object.entries(this.currentCharacter)\n      });\n\n    this.navigationEnd = router.events.pipe(filter(event => event instanceof NavigationEnd)) as Observable<NavigationEnd>\n    this.navigationEndSubscription = this.navigationEnd.subscribe(event => {\n      let urlFragments = event.url.split('/');\n      peopleService.setCurrentChild(urlFragments[urlFragments.length - 1]);\n    })\n  }\n\n  ngOnInit(): void { }\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.setCurrentCharacterSubscribtion.unsubscribe();\n    this.swapiCharactersSubscription.unsubscribe();\n    this.navigationEndSubscription.unsubscribe()\n  }\n}\n","<!-- <h6>Character works!</h6> -->\n<!-- <code>{{id_v}}</code> -->\n\n    <!-- <div class=\"row\" >\n        <div class=\"col\">A</div>\n        <div class=\"col\">B</div>\n    </div> -->\n    <!-- <div class=\"row\" *ngFor=\"let entry of id_v\">\n        <div class=\"col\">{{entry[0]}}</div>\n        <div class=\"col text-truncate\">{{entry[1]}}</div>\n    </div> -->\n    <div class=\"table-responsive clearfix\">\n    <table class=\"table table-striped table-bordered\">\n        <!-- <caption class=\"caption-top\">{{currentCharacter.name}}</caption> -->\n        <thead class=\"table-light\">\n            <tr>\n                <th colspan=\"2\">{{currentCharacter.name}}</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let entry of id_v\">\n                <td>{{entry[0]}}</td>\n                <td ><span class=\"d-inline-block text-truncate\" style=\"max-width: 220px;\">{{entry[1]}}</span></td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SwapiService } from '../swapi.service';\n@Component({\n  selector: 'app-elements',\n  templateUrl: './elements.component.html',\n  styleUrls: ['./elements.component.css']\n})\nexport class ElementsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}","<div class=\"jumbotron\">\n  <!-- <h1>elements works!</h1> -->\n  <p class=\"lead\">Select category from navigation bar.</p>\n  <!-- <p><a href=\"https://www.tutorialrepublic.com\" target=\"_blank\" class=\"btn btn-success btn-lg\">Get started today</a></p> -->\n</div>\n<div class=\"accordion accordion-flush visually-hidden\" id=\"accordionFlushExample\">\n  <div class=\"accordion-item\">\n    <h2 class=\"accordion-header\" id=\"flush-headingOne\">\n      <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n        data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n        Accordion Item #1\n      </button>\n    </h2>\n    <div id=\"flush-collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\"\n      data-bs-parent=\"#accordionFlushExample\">\n      <div class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the\n        <code>.accordion-flush</code> class. This is the first item's accordion body.</div>\n    </div>\n  </div>\n  <div class=\"accordion-item\">\n    <h2 class=\"accordion-header\" id=\"flush-headingTwo\">\n      <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n        data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\n        Accordion Item #2\n      </button>\n    </h2>\n    <div id=\"flush-collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\"\n      data-bs-parent=\"#accordionFlushExample\">\n      <div class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the\n        <code>.accordion-flush</code> class. This is the second item's accordion body. Let's imagine this being filled\n        with some actual content.</div>\n    </div>\n  </div>\n  <div class=\"accordion-item\">\n    <h2 class=\"accordion-header\" id=\"flush-headingThree\">\n      <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n        data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\n        Accordion Item #3\n      </button>\n    </h2>\n    <div id=\"flush-collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\"\n      data-bs-parent=\"#accordionFlushExample\">\n      <div class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the\n        <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening\n        here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more\n        representative of how this would look in a real-world application.</div>\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable, Subject } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nexport let API_PATH_BASE = 'https://www.swapi.tech/api/'\n\nexport interface People {\n  results: Character[],\n  next: string,\n  previous: string,\n  count: number\n}\nexport interface Character {\n  name: String,\n  height: String,\n  mass: String,\n  gender: String,\n  homeworld: String,\n  films: String[],\n  url: String\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SwapiService {\n\n  constructor(private http: HttpClient) { }\n  private peopleSource = new Subject<string>();\n  people$ = this.peopleSource.asObservable().pipe(\n    switchMap(\n      pageUrl => this.http.get<People>(pageUrl).pipe(\n        catchError(\n          error => {\n            this.setError(error);\n            return new Observable<People>();\n          })\n      )\n    )\n  );\n\n  setPeoplePage(pageUrl: string) {\n    console.log('setPeoplePage', pageUrl);\n\n    this.peopleSource.next(pageUrl)\n  }\n\n  // getPeople(page: string): Observable<People> {\n  //   // return this.http.get(API_PATH_BASE + 'people/?page=' + (page ? page : '')) as Observable<People>\n  //   return this.http.get(page) as Observable<People>\n  // }\n  private characterSource = new Subject<string>();\n  characters$ = this.characterSource.asObservable().pipe(\n    switchMap(\n      id => this.http.get<any>(API_PATH_BASE + 'people/' + id).pipe(\n        map(result => result.result.properties as Character),\n        catchError(\n          error => {\n            this.setError(error);\n            return new Observable<Character>()\n          })\n      )\n    )\n  );\n\n  setCurrentCharacter(id: string) {\n    console.log('setCurrentCharacter', id);\n    return this.characterSource.next(id);\n  }\n\n  private errorSource = new Subject<any>();\n  errors$ = this.errorSource.asObservable()\n  setError(error: any) {\n    console.log('setError', error);\n\n    this.errorSource.next(error);\n  }\n\n  getPlanets() {\n    return this.http.get(API_PATH_BASE + 'planets/')\n  }\n}\n","import { HttpEvent } from '@angular/common/http';\nimport { Component, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ContentService } from './content.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n\n})\nexport class AppComponent {\n  // constructor(private route: ActivatedRoute,private router:Router) {this.rtr = router }\n\n  private contentSubscription: Subscription;\n  private JSONcontentSubscription: Subscription;\n  private _name: any;\n  //ctn\n  constructor(private route: ActivatedRoute, private contentService: ContentService) {\n    this._name = null;\n    this.contentSubscription = Subscription.EMPTY;\n    this.JSONcontentSubscription = Subscription.EMPTY;\n    //this.ctn = null;\n  }\n  public get name(): any {\n    return this._name;\n  }\n  public set name(v: any) {\n    this._name = v;\n  }\n  loadXMLDoc(content: XMLDocument) {\n    if (content) {\n      let child = content.firstElementChild?.firstElementChild;\n      if (child) {\n        do {\n          console.log(`${child.children[1].innerHTML}: `, child.children[5].innerHTML);\n          child = child.nextElementSibling;\n        } while (child);\n      }\n    }\n  }\n  ngOnInit() {\n    this.contentSubscription = this.contentService.content$.subscribe(content => this.loadXMLDoc(content));\n    this.JSONcontentSubscription = this.contentService.JSONcontent$.subscribe(content => {\n      this.name = content\n    });\n\n    this.contentService.setCurrentContent(\"assets/sample.xml\");\n    this.contentService.setCurrentJSONContent(\"assets/data.json\")\n    /*     let xmlDoc = this.loadXMLDoc(\"assets/sample.xml\");\n        if (xmlDoc) {\n      \n          let child = xmlDoc.firstElementChild?.firstElementChild;\n          if (child) {\n            do {\n              console.log(`${child.children[1].innerHTML}: `, child.children[5].innerHTML);\n              child = child.nextElementSibling;\n            } while (child);\n          }\n        } */\n\n    // this.route.queryParams.subscribe(params => {\n    //   this.name = params['name']\n    // })\n\n    // this.route.url.subscribe(urls => {\n    //   console.log(urls)\n    // })\n\n    // this.route.data.subscribe(data => {\n    //   console.log(data)\n    // })\n\n  }\n  title = 'temp';\n  ngOnDestroy() {\n    this.contentSubscription.unsubscribe()\n    this.JSONcontentSubscription.unsubscribe()\n  }\n}\n","<div class=\"jumbotron bg-dark text-light\">\n  <!-- <h1>elements works!</h1> -->\n  <span class=\"lead\">Select category from navigation bar.</span>\n</div>\n<nav class=\"navbar sticky-top navbar-expand-md  navbar-dark bg-dark shadow \">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand \" routerLink=\"/\" routerLinkActive=\"active\"><img src=\"/assets/bootstrap-logo.svg\" width=\"35\"\n        height=\"30\" alt=\"\" class=\"d-inline-block align-text-top\">Star Wars Database</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" aria-current=\"page\" routerLink=\"elements/people/\" routerLinkActive=\"active\">People</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"elements/planets/\" routerLinkActive=\"active\">Planets</a>\n        </li>\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\"\n            aria-expanded=\"false\">\n            Dropdown\n          </a>\n          <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n            <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n            <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n            <li>\n              <hr class=\"dropdown-divider\">\n            </li>\n            <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n          </ul>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n        </li>\n      </ul>\n      <form class=\"d-flex\">\n        <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n        <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n</nav>\n<!-- <div class=\"container-fluid\" style=\"margin-top: 60px;\"> -->\n<div class=\"container-fluid\">\n\n  <router-outlet></router-outlet>\n  <hr>\n\n  <footer>\n\n    <ng-container *ngFor=\"let item of name\">\n      <H1>{{item.article.title}}</H1>\n      <p class=\"small\">{{item.article.date|date:'longDate'}}</p>\n      <p *ngFor=\"let para of item.article.body\"><span *ngFor=\"let s of para.paragraph\"\n          [ngClass]=\"s.style\">{{s.text}}</span></p>\n    </ng-container>\n\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <p #dpr>Copyright &copy; 2019 Tutorial Republic</p>\n\n      </div>\n      <div class=\"col-md-6 text-md-right\">\n        <a href=\"#\" class=\"text-dark\">Terms of Use</a>\n        <span class=\"text-muted mx-2\">|</span>\n        <a href=\"#\" class=\"text-dark\">Privacy Policy</a>\n      </div>\n    </div>\n  </footer>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { PeopleComponent } from './elements/people/people.component';\nimport { PlanetsComponent } from './elements/planets/planets.component';\nimport { CharacterComponent } from './elements/people/character/character.component';\nimport { PlanetComponent } from './elements/planets/planet/planet.component';\nimport { ElementsComponent } from './elements/elements.component';\nimport { HttpClientModule } from \"@angular/common/http\";\n// import { AppComponent } from './app.component';\n// import { MainContainerComponent } from \"./main-container/main-container.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent,\n    PeopleComponent,\n    PlanetsComponent,\n    CharacterComponent,\n    PlanetComponent,\n    ElementsComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>404 &mdash; not found</h1>\n<p class=\"display-1\">¯\\_(ツ)_/¯</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ElementsComponent } from './elements/elements.component';\nimport { CharacterComponent } from './elements/people/character/character.component';\nimport { PeopleComponent } from './elements/people/people.component';\nimport { PlanetComponent } from './elements/planets/planet/planet.component';\nimport { MainContainerComponent } from './main-container/main-container.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  { path: \"maincontainer\", component: MainContainerComponent },\n  {\n    path: \"elements\", component: ElementsComponent,\n    children: [\n      {\n        path: 'people', component: PeopleComponent,\n        children: [\n          { path: ':id', component: CharacterComponent }\n        ]\n      },\n      {\n        path: 'planets', component: PlanetComponent\n      }\n\n    ]\n  },\n  { path: '', redirectTo: '/elements', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-container',\n  templateUrl: './main-container.component.html',\n  styleUrls: ['./main-container.component.css']\n})\nexport class MainContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","\n    <div class=\"jumbotron\">\n        <h1>Learn to Create Websites</h1>\n        <p class=\"lead\">In today's world internet is the most popular way of connecting with the people. At <a href=\"https://www.tutorialrepublic.com\" target=\"_blank\">tutorialrepublic.com</a> you will learn the essential web development technologies along with real life practice examples, so that you can create your own website to connect with the people around the world.</p>\n        <p><a href=\"https://www.tutorialrepublic.com\" target=\"_blank\" class=\"btn btn-success btn-lg\">Get started today</a></p>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-6 col-lg-4 col-xl-3\">\n            <h2>HTML</h2>\n            <p>HTML is the standard markup language for describing the structure of the web pages. Our HTML tutorials will help you to understand the basics of latest HTML5 language, so that you can create your own website.</p>\n            <p><a href=\"https://www.tutorialrepublic.com/html-tutorial/\" target=\"_blank\" class=\"btn btn-success\">Learn More &raquo;</a></p>\n        </div>\n        <div class=\"col-md-6 col-lg-4 col-xl-3\">\n            <h2>CSS</h2>\n            <p>CSS is used for describing the presentation of web pages. CSS can save a lot of time and effort. Our CSS tutorials will help you to learn the essentials of latest CSS3, so that you can control the style and layout of your website.</p>\n            <p><a href=\"https://www.tutorialrepublic.com/css-tutorial/\" target=\"_blank\" class=\"btn btn-success\">Learn More &raquo;</a></p>\n        </div>\n        <div class=\"col-md-6 col-lg-4 col-xl-3\">\n            <h2>JavaScript</h2>\n            <p>JavaScript is the most popular and widely used client-side scripting language. Our JavaScript tutorials will provide in-depth knowledge of the JavaScript including ES6 features, so that you can create interactive websites.</p>\n            <p><a href=\"https://www.tutorialrepublic.com/javascript-tutorial/\" target=\"_blank\" class=\"btn btn-success\">Learn More &raquo;</a></p>\n        </div>\n        <div class=\"col-md-6 col-lg-4 col-xl-3\">\n            <h2>Bootstrap</h2>\n            <p>Bootstrap is a powerful front-end framework for faster and easier web development. Our Bootstrap tutorials will help you to learn all the features of latest Bootstrap 4 framework so that you can easily create responsive websites.</p>\n            <p><a href=\"https://www.tutorialrepublic.com/twitter-bootstrap-tutorial/\" target=\"_blank\" class=\"btn btn-success\">Learn More &raquo;</a></p>\n        </div>\n        <div class=\"col-md-6 col-lg-4 col-xl-3\">\n            <h2>PHP</h2>\n            <p>PHP is the most popular server-side scripting language for creating dynamic web pages. Our PHP tutorials will help you to learn all the features of latest PHP7 scripting language so that you can easily create dynamic websites.</p>\n            <p><a href=\"https://www.tutorialrepublic.com/twitter-bootstrap-tutorial/\" target=\"_blank\" class=\"btn btn-success\">Learn More &raquo;</a></p>\n        </div>\n        <div class=\"col-md-6 col-lg-4 col-xl-3\">\n            <h2>SQL</h2>\n            <p>SQL is a standard language designed for managing data in relational database management system. Our SQL tutorials will help you to learn the fundamentals of the SQL language so that you can efficiently manage your databases.</p>\n            <p><a href=\"https://www.tutorialrepublic.com/twitter-bootstrap-tutorial/\" target=\"_blank\" class=\"btn btn-success\">Learn More &raquo;</a></p>\n        </div>\n        <div class=\"col-md-6 col-lg-4 col-xl-3\">\n            <h2>References</h2>\n            <p>Our references section outlines all the standard HTML5 tags and CSS3 properties along with other useful references such as color names and values, character entities, web safe fonts, language codes, HTTP messages, and more.</p>\n            <p><a href=\"https://www.tutorialrepublic.com/twitter-bootstrap-tutorial/\" target=\"_blank\" class=\"btn btn-success\">Learn More &raquo;</a></p>\n        </div>\n        <div class=\"col-md-6 col-lg-4 col-xl-3\">\n            <h2>FAQ</h2>\n            <p>Our Frequently Asked Questions (FAQ) section is an extensive collection of FAQs that provides quick and working solution of common questions and queries related to web design and development with live demo.</p>\n            <p><a href=\"https://www.tutorialrepublic.com/twitter-bootstrap-tutorial/\" target=\"_blank\" class=\"btn btn-success\">Learn More &raquo;</a></p>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-planets',\n  templateUrl: './planets.component.html',\n  styleUrls: ['./planets.component.css']\n})\nexport class PlanetsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>planets works!</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)/* .then(ref => console.log(ref.injector)) */\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { HttpClient, HttpEvent, HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContentService {\n\n  constructor(private http: HttpClient) { }\n  private contentSource = new Subject<string>();\n  content$ = this.contentSource.asObservable().pipe(\n    switchMap(\n      pageUrl => {\n        let obs: Observable<HttpResponse<string>> = this.http.request('GET', pageUrl, { observe: \"response\", responseType: \"text\" }).pipe(\n          catchError(\n            error => {\n              this.setError(error);\n              return new Observable<HttpResponse<string>>();\n            })\n        )\n        return obs;\n      }\n    ),\n    map(response => {\n      let body = response.body ? response.body : \"\";\n      let parser = new DOMParser();\n      let xmlDoc: XMLDocument = parser.parseFromString(body, \"text/xml\")\n      return xmlDoc;\n    })\n  );\n\n  setCurrentContent(pageUrl: string) {\n    this.contentSource.next(pageUrl);\n  }\n\n  private errorSource = new Subject<any>();\n  errors$ = this.errorSource.asObservable()\n  setError(error: any) {\n    this.errorSource.next(error);\n  }\n\n  private JSONcontentSource = new Subject<string>();\n  /*   JSONcontent$ = this.JSONcontentSource.asObservable().pipe(\n      switchMap(\n        pageUrl => {\n          let obs: Observable<HttpResponse<string>> = this.http.request('GET', pageUrl, { observe: \"response\", responseType: \"text\" }).pipe(\n            catchError(\n              error => {\n                this.setError(error);\n                return new Observable<HttpResponse<string>>();\n              })\n          )\n          return obs;\n        }\n      ),\n      map(response => {\n        let body = response.body ? response.body : \"\";\n        // let parser = new DOMParser();\n        let jsonDoc = JSON.parse(body)\n        return jsonDoc;\n      })\n    ); */\n  JSONcontent$ = this.JSONcontentSource.asObservable().pipe(\n    switchMap(\n      pageUrl => {\n        let obs: Observable<HttpEvent<string>> = this.http.request('GET', pageUrl, { observe: \"events\", responseType: \"text\" }).pipe(\n          catchError(\n            error => {\n              this.setError(error);\n              return new Observable<HttpEvent<string>>();\n            })\n        )\n        return obs;\n      }\n    ),\n    map(response => {\n      switch (response.type) {\n        case HttpEventType.Response:\n          console.log(response.headers.keys())\n          let body = response.body ? response.body : \"\";\n          // let parser = new DOMParser();\n          let jsonDoc = JSON.parse(body)\n          return jsonDoc;\n        // break;\n        case HttpEventType.Sent:\n          console.log(response);\n          break;\n        case HttpEventType.ResponseHeader:\n          console.log(response);\n          break;\n        default:\n          console.log(response);\n      }\n\n    })\n  );\n  setCurrentJSONContent(pageUrl: string) {\n    this.JSONcontentSource.next(pageUrl);\n  }\n}\n"],"sourceRoot":"webpack:///"}